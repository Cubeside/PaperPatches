From 1cf6f5a5b59d01dfade9d834da168842a6d4afc0 Mon Sep 17 00:00:00 2001
From: fanta <tobiasmuellner@outlook.com>
Date: Fri, 9 Dec 2022 07:05:08 +0100
Subject: [PATCH] Small-biomes

---
 .../minecraft/data/worldgen/NoiseData.java    | 80 +++++++++++++++++++
 1 file changed, 80 insertions(+)
 create mode 100644 src/main/java/net/minecraft/data/worldgen/NoiseData.java

diff --git a/src/main/java/net/minecraft/data/worldgen/NoiseData.java b/src/main/java/net/minecraft/data/worldgen/NoiseData.java
new file mode 100644
index 000000000..2f6e2ccfc
--- /dev/null
+++ b/src/main/java/net/minecraft/data/worldgen/NoiseData.java
@@ -0,0 +1,80 @@
+package net.minecraft.data.worldgen;
+
+import net.minecraft.resources.ResourceKey;
+import net.minecraft.world.level.levelgen.Noises;
+import net.minecraft.world.level.levelgen.synth.NormalNoise;
+
+public class NoiseData {
+    /** @deprecated */
+    @Deprecated
+    public static final NormalNoise.NoiseParameters DEFAULT_SHIFT = new NormalNoise.NoiseParameters(-3, 1.0D, 1.0D, 1.0D, 0.0D);
+
+    public static void bootstrap(BootstapContext<NormalNoise.NoiseParameters> noiseParametersRegisterable) {
+        registerBiomeNoises(noiseParametersRegisterable, 0, Noises.TEMPERATURE, Noises.VEGETATION, Noises.CONTINENTALNESS, Noises.EROSION);
+        registerBiomeNoises(noiseParametersRegisterable, -2, Noises.TEMPERATURE_LARGE, Noises.VEGETATION_LARGE, Noises.CONTINENTALNESS_LARGE, Noises.EROSION_LARGE);
+        register(noiseParametersRegisterable, Noises.RIDGE, -7, 1.0D, 2.0D, 1.0D, 0.0D, 0.0D, 0.0D);
+        noiseParametersRegisterable.register(Noises.SHIFT, DEFAULT_SHIFT);
+        register(noiseParametersRegisterable, Noises.AQUIFER_BARRIER, -3, 1.0D);
+        register(noiseParametersRegisterable, Noises.AQUIFER_FLUID_LEVEL_FLOODEDNESS, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.AQUIFER_LAVA, -1, 1.0D);
+        register(noiseParametersRegisterable, Noises.AQUIFER_FLUID_LEVEL_SPREAD, -5, 1.0D);
+        register(noiseParametersRegisterable, Noises.PILLAR, -7, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.PILLAR_RARENESS, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.PILLAR_THICKNESS, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_2D, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_2D_ELEVATION, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_2D_MODULATOR, -11, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_2D_THICKNESS, -11, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_3D_1, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_3D_2, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_3D_RARITY, -11, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_3D_THICKNESS, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_ROUGHNESS, -5, 1.0D);
+        register(noiseParametersRegisterable, Noises.SPAGHETTI_ROUGHNESS_MODULATOR, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.CAVE_ENTRANCE, -7, 0.4D, 0.5D, 1.0D);
+        register(noiseParametersRegisterable, Noises.CAVE_LAYER, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.CAVE_CHEESE, -8, 0.5D, 1.0D, 2.0D, 1.0D, 2.0D, 1.0D, 0.0D, 2.0D, 0.0D);
+        register(noiseParametersRegisterable, Noises.ORE_VEININESS, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.ORE_VEIN_A, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.ORE_VEIN_B, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.ORE_GAP, -5, 1.0D);
+        register(noiseParametersRegisterable, Noises.NOODLE, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.NOODLE_THICKNESS, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.NOODLE_RIDGE_A, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.NOODLE_RIDGE_B, -7, 1.0D);
+        register(noiseParametersRegisterable, Noises.JAGGED, -16, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.SURFACE, -6, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.SURFACE_SECONDARY, -6, 1.0D, 1.0D, 0.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.CLAY_BANDS_OFFSET, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.BADLANDS_PILLAR, -2, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.BADLANDS_PILLAR_ROOF, -8, 1.0D);
+        register(noiseParametersRegisterable, Noises.BADLANDS_SURFACE, -6, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.ICEBERG_PILLAR, -6, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.ICEBERG_PILLAR_ROOF, -3, 1.0D);
+        register(noiseParametersRegisterable, Noises.ICEBERG_SURFACE, -6, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.SWAMP, -2, 1.0D);
+        register(noiseParametersRegisterable, Noises.CALCITE, -9, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.GRAVEL, -8, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.POWDER_SNOW, -6, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.PACKED_ICE, -7, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.ICE, -4, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, Noises.SOUL_SAND_LAYER, -8, 1.0D, 1.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.013333333333333334D);
+        register(noiseParametersRegisterable, Noises.GRAVEL_LAYER, -8, 1.0D, 1.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.013333333333333334D);
+        register(noiseParametersRegisterable, Noises.PATCH, -5, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.013333333333333334D);
+        register(noiseParametersRegisterable, Noises.NETHERRACK, -3, 1.0D, 0.0D, 0.0D, 0.35D);
+        register(noiseParametersRegisterable, Noises.NETHER_WART, -3, 1.0D, 0.0D, 0.0D, 0.9D);
+        register(noiseParametersRegisterable, Noises.NETHER_STATE_SELECTOR, -4, 1.0D);
+    }
+
+    private static void registerBiomeNoises(BootstapContext<NormalNoise.NoiseParameters> noiseParametersRegisterable, int octaveOffset, ResourceKey<NormalNoise.NoiseParameters> temperatureKey, ResourceKey<NormalNoise.NoiseParameters> vegetationKey, ResourceKey<NormalNoise.NoiseParameters> continentalnessKey, ResourceKey<NormalNoise.NoiseParameters> erosionKey) {
+        register(noiseParametersRegisterable, temperatureKey, -10 + octaveOffset, 1.5D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, vegetationKey, -8 + octaveOffset, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, continentalnessKey, -9 + octaveOffset, 1.0D, 1.0D, 2.0D, 2.0D, 2.0D, 1.0D, 1.0D, 1.0D, 1.0D);
+        register(noiseParametersRegisterable, erosionKey, -9 + octaveOffset, 1.0D, 1.0D, 0.0D, 1.0D, 1.0D);
+    }
+
+    private static void register(BootstapContext<NormalNoise.NoiseParameters> noiseParametersRegisterable, ResourceKey<NormalNoise.NoiseParameters> key, int firstOctave, double firstAmplitude, double... amplitudes) {
+        noiseParametersRegisterable.register(key, new NormalNoise.NoiseParameters(firstOctave, firstAmplitude, amplitudes));
+    }
+}
+
-- 
2.33.1.windows.1

