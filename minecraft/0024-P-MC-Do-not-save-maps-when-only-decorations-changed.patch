From f22f273c035777a91e372779b5afa7462b6a61c9 Mon Sep 17 00:00:00 2001
From: Brokkonaut <hannos17@gmx.de>
Date: Fri, 10 Jan 2025 04:29:50 +0100
Subject: [PATCH] P+MC Do not save maps when only decorations changed

---
 .../world/level/saveddata/maps/MapItemSavedData.java | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java b/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
index 0b0770e..a380ae9 100644
--- a/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -317,7 +317,12 @@ public class MapItemSavedData extends SavedData {
             this.addDecoration(
                 MapDecorationTypes.FRAME, player.level(), getFrameKey(frame.getId()), pos.getX(), pos.getZ(), frame.getDirection().get2DDataValue() * 90, null
             );
-            this.frameMarkers.put(mapFrame1.getId(), mapFrame1);
+            // Brokko start - mark dirty if mapframe changed
+            MapFrame oldFrame = this.frameMarkers.put(mapFrame1.getId(), mapFrame1);
+            if (oldFrame == null || oldFrame.getEntityId() != mapFrame1.getEntityId() || oldFrame.getRotation() != mapFrame1.getRotation()) {
+                setDirty();
+            }
+            // Brokko end
             } // Paper - Limit item frame cursors on maps
         }
 
@@ -470,7 +475,7 @@ public class MapItemSavedData extends SavedData {
     }
 
     public void setDecorationsDirty() {
-        this.setDirty();
+        // this.setDirty(); // Brokko - No need to set dirty, decorations are not persisted
         this.carriedBy.forEach(MapItemSavedData.HoldingPlayer::markDecorationsDirty);
     }
 
@@ -499,11 +504,13 @@ public class MapItemSavedData extends SavedData {
             }
 
             if (this.bannerMarkers.remove(mapBanner.getId(), mapBanner)) {
+                setDirty(); // Brokko
                 this.removeDecoration(mapBanner.getId());
                 return true;
             }
 
             if (!this.isTrackedCountOverLimit(((Level) accessor).paperConfig().maps.itemFrameCursorLimit)) { // Paper - Limit item frame cursors on maps
+                setDirty(); // Brokko
                 this.bannerMarkers.put(mapBanner.getId(), mapBanner);
                 this.addDecoration(mapBanner.getDecoration(), accessor, mapBanner.getId(), d, d1, 180.0, mapBanner.name().orElse(null));
                 return true;
@@ -522,6 +529,7 @@ public class MapItemSavedData extends SavedData {
                 MapBanner mapBanner1 = MapBanner.fromWorld(reader, mapBanner.pos());
                 if (!mapBanner.equals(mapBanner1)) {
                     iterator.remove();
+                    setDirty(); // Brokko
                     this.removeDecoration(mapBanner.getId());
                 }
             }
-- 
2.32.0.windows.1

