From c9679bf784457ec95f40dcb20e3358708880c0c6 Mon Sep 17 00:00:00 2001
From: Brokkonaut <hannos17@gmx.de>
Date: Mon, 18 Dec 2023 06:54:55 +0100
Subject: [PATCH] Laggy shit

---
 .../world/level/saveddata/SavedData.java      | 53 +++++++++++++++++++
 1 file changed, 53 insertions(+)
 create mode 100644 src/main/java/net/minecraft/world/level/saveddata/SavedData.java

diff --git a/src/main/java/net/minecraft/world/level/saveddata/SavedData.java b/src/main/java/net/minecraft/world/level/saveddata/SavedData.java
new file mode 100644
index 000000000..d95483c6f
--- /dev/null
+++ b/src/main/java/net/minecraft/world/level/saveddata/SavedData.java
@@ -0,0 +1,53 @@
+package net.minecraft.world.level.saveddata;
+
+import com.mojang.logging.LogUtils;
+import java.io.File;
+import java.io.IOException;
+import java.util.function.Function;
+import java.util.function.Supplier;
+import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.NbtIo;
+import net.minecraft.nbt.NbtUtils;
+import net.minecraft.util.datafix.DataFixTypes;
+import org.slf4j.Logger;
+
+public abstract class SavedData {
+    private static final Logger LOGGER = LogUtils.getLogger();
+    private boolean dirty;
+
+    public abstract CompoundTag save(CompoundTag nbt);
+
+    public void setDirty() {
+        this.setDirty(true);
+    }
+
+    public void setDirty(boolean dirty) {
+        this.dirty = dirty;
+    }
+
+    public boolean isDirty() {
+        return this.dirty;
+    }
+
+    public void save(File file) {
+        if (this.isDirty()) {
+            CompoundTag compoundTag = new CompoundTag();
+            compoundTag.put("data", this.save(new CompoundTag()));
+            NbtUtils.addCurrentDataVersion(compoundTag);
+            new Thread() {
+                public void run() {
+            try {
+                NbtIo.writeCompressed(compoundTag, file.toPath());
+            } catch (IOException var4) {
+                LOGGER.error("Could not save data {}", this, var4);
+            }
+                }
+            }.start();
+
+            this.setDirty(false);
+        }
+    }
+
+    public static record Factory<T extends SavedData>(Supplier<T> constructor, Function<CompoundTag, T> deserializer, DataFixTypes type) {
+    }
+}
-- 
2.32.0.windows.1

