From b47adb2a04ff777ae0e40dd3b7ecdd3517b1ae4b Mon Sep 17 00:00:00 2001
From: Brokkonaut <hannos17@gmx.de>
Date: Sat, 26 Oct 2024 06:04:49 +0200
Subject: [PATCH] Do not save maps when only decorations changed

---
 .../world/level/saveddata/maps/MapItemSavedData.java | 12 ++++++++++--
 .../org/bukkit/craftbukkit/map/CraftMapView.java     |  7 +++++++
 2 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
index 48a20b8ae..303a3da25 100644
--- a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -340,7 +340,12 @@ public class MapItemSavedData extends SavedData {
 
             if (this.decorations.size() < player.level().paperConfig().maps.itemFrameCursorLimit) { // Paper - Limit item frame cursors on maps
             this.addDecoration(MapDecorationTypes.FRAME, player.level(), MapItemSavedData.getFrameKey(entityitemframe.getId()), (double) blockposition.getX(), (double) blockposition.getZ(), (double) (entityitemframe.getDirection().get2DDataValue() * 90), (Component) null);
-            this.frameMarkers.put(worldmapframe1.getId(), worldmapframe1);
+            // Brokko start - mark dirty if mapframe changed
+            MapFrame oldFrame = this.frameMarkers.put(worldmapframe1.getId(), worldmapframe1);
+            if (oldFrame == null || oldFrame.getEntityId() != worldmapframe1.getEntityId() || oldFrame.getRotation() != worldmapframe1.getRotation()) {
+                setDirty();
+            }
+            // Brokko end
             } // Paper - Limit item frame cursors on maps
         }
 
@@ -498,7 +503,7 @@ public class MapItemSavedData extends SavedData {
     }
 
     public void setDecorationsDirty() {
-        this.setDirty();
+        // this.setDirty(); // Brokko - No need to set dirty, decorations are not persisted
         this.carriedBy.forEach(MapItemSavedData.HoldingPlayer::markDecorationsDirty);
     }
 
@@ -530,11 +535,13 @@ public class MapItemSavedData extends SavedData {
             }
 
             if (this.bannerMarkers.remove(mapiconbanner.getId(), mapiconbanner)) {
+                setDirty(); // Brokko
                 this.removeDecoration(mapiconbanner.getId());
                 return true;
             }
 
             if (!this.isTrackedCountOverLimit(((Level) world).paperConfig().maps.itemFrameCursorLimit)) { // Paper - Limit item frame cursors on maps
+                setDirty(); // Brokko
                 this.bannerMarkers.put(mapiconbanner.getId(), mapiconbanner);
                 this.addDecoration(mapiconbanner.getDecoration(), world, mapiconbanner.getId(), d0, d1, 180.0D, (Component) mapiconbanner.name().orElse(null)); // CraftBukkit - decompile error
                 return true;
@@ -555,6 +562,7 @@ public class MapItemSavedData extends SavedData {
 
                 if (!mapiconbanner.equals(mapiconbanner1)) {
                     iterator.remove();
+                    setDirty(); // Brokko
                     this.removeDecoration(mapiconbanner.getId());
                 }
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/map/CraftMapView.java b/src/main/java/org/bukkit/craftbukkit/map/CraftMapView.java
index a15cdf645..de8764db7 100644
--- a/src/main/java/org/bukkit/craftbukkit/map/CraftMapView.java
+++ b/src/main/java/org/bukkit/craftbukkit/map/CraftMapView.java
@@ -47,6 +47,7 @@ public final class CraftMapView implements MapView {
     @Override
     public void setScale(Scale scale) {
         this.worldMap.scale = scale.getValue();
+        this.worldMap.setDirty(); // Brokko
     }
 
     @Override
@@ -68,6 +69,7 @@ public final class CraftMapView implements MapView {
     public void setWorld(World world) {
         this.worldMap.dimension = ((CraftWorld) world).getHandle().dimension();
         this.worldMap.uniqueId = world.getUID();
+        this.worldMap.setDirty(); // Brokko
     }
 
     @Override
@@ -83,11 +85,13 @@ public final class CraftMapView implements MapView {
     @Override
     public void setCenterX(int x) {
         this.worldMap.centerX = x;
+        this.worldMap.setDirty(); // Brokko
     }
 
     @Override
     public void setCenterZ(int z) {
         this.worldMap.centerZ = z;
+        this.worldMap.setDirty(); // Brokko
     }
 
     @Override
@@ -182,6 +186,7 @@ public final class CraftMapView implements MapView {
     @Override
     public void setTrackingPosition(boolean trackingPosition) {
         this.worldMap.trackingPosition = trackingPosition;
+        this.worldMap.setDirty(); // Brokko
     }
 
     @Override
@@ -192,6 +197,7 @@ public final class CraftMapView implements MapView {
     @Override
     public void setUnlimitedTracking(boolean unlimited) {
         this.worldMap.unlimitedTracking = unlimited;
+        this.worldMap.setDirty(); // Brokko
     }
 
     @Override
@@ -202,5 +208,6 @@ public final class CraftMapView implements MapView {
     @Override
     public void setLocked(boolean locked) {
         this.worldMap.locked = locked;
+        this.worldMap.setDirty(); // Brokko
     }
 }
-- 
2.32.0.windows.1

